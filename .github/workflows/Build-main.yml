name: Build with GitHub Action for GraalVM
on:
  pull_request:
    branches:
      - main
jobs:
  build:
    name: Native Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    steps:
      - name: Checkout source code
        uses: actions/checkout@master

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build step using Gradle plugin for Ubuntu or MacOS
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          echo $SHELL
          pwd
          ls -alR gradle*
          chmod +x gradlew
          ls -alR gradle*
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          echo "GRADLE_HOME: $GRADLE_HOME"
          echo "GRADLE_USER_HOME: $GRADLE_USER_HOME"
          echo "GRADLE_OPTS: GRADLE_OPTS"
          java --version
          native-image --version
          gradle -v
          ./gradlew --version
          ./gradlew clean nativeCompile
      

      - name: Build step using Gradle plugin for Windows
        if: matrix.os == 'windows-latest'
        run: |
          CD
          dir -Recurse -Filter gradle*   
          java --version
          native-image --version
          gradle -v
          echo "일반 정보"
          [System.Environment]::OSVersion
          echo "상세 정보"
          Get-ComputerInfo | Select-Object WindowsProductName, WindowsVersion, OsHardwareAbstractionLayer
          gradle clean nativeCompile

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: spring3-edu-test-${{ matrix.os }}
          path: spring3-edu-test/build/native/nativeCompile